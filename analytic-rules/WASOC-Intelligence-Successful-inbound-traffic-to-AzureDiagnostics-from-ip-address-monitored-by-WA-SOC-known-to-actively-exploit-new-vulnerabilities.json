{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspace": {
            "type": "String"
        },
	"ruleId": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "metadata": {
        "description": "The unique guid for this Analytics Rule"
				}
			}
    },
    "resources": [
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/', parameters('ruleId'))]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', parameters('ruleId'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2023-12-01-preview",
            "properties": {
                "displayName": "[WASOC-Intelligence] Successful inbound traffic to AzureDiagnostics from ip-address monitored by WA SOC known to actively exploit new vulnerabilities",
                "description": "The rules detect suspicious Ip-address activities against agency's web application gateway and Frontdoor logs (AzureDiagnostics)",
                "severity": "Medium",
                "enabled": true,
                "query": "//WASOC-Intelligence webapp-001\nlet dt_lookBack = 1h; // Look back 1 hour for AzureDiagnostics logs\nlet ioc_lookBack = 14d; // Look back 14 days for threat intelligence indicators\n// Fetch threat intelligence indicators related to IP addresses\nlet IP_Indicators = ThreatIntelIndicators\n//extract key part of kv pair\n     | extend IndicatorType = replace(@\"\\[|\\]|\\\"\"\", \"\", tostring(split(ObservableKey, \":\", 0)))\n     | where IndicatorType in (\"ipv4-addr\", \"ipv6-addr\")\n     | extend TI_ipEntity = tolower(ObservableValue) //changed to tolower() for standardization with \n     | extend TrafficLightProtocolLevel = tostring(parse_json(AdditionalFields).TLPLevel)\n  // Filter out indicators without relevant IP address fields\n  | where TimeGenerated >= ago(ioc_lookBack)\n  //Use only WASOC-Government-ISAC feed\n| where SourceSystem == \"WASOC-Government-ISAC\" and Tags contains \"web app exploitation\"\n  // Exclude local addresses using the ipv4_is_private operator and filtering out specific address prefixes\n  | where ipv4_is_private(TI_ipEntity) != true and  TI_ipEntity !startswith \"fe80\" and TI_ipEntity !startswith \"::\" and TI_ipEntity !startswith \"127.\"\n  | summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by Id, ObservableValue\n  | where IsActive and (ValidUntil > now() or isempty(ValidUntil));\n// Perform a join between IP indicators and AzureDiagnostics logs to identify potential malicious activity\nIP_Indicators\n    | project-reorder *, Tags, TrafficLightProtocolLevel, Type, TI_ipEntity\n    | join kind=inner\n(\n    AzureDiagnostics\n    | where TimeGenerated >= ago(dt_lookBack)\n    | where Category in~(\"ApplicationGatewayAccessLog\", \"ApplicationGatewayFirewallLog\", \"FrontDoorAccessLog\",\"FrontDoorWebApplicationFirewallLog\")\n    | extend ClientIP_ = tolower(iff(isempty(clientIP_s), column_ifexists(\"clientIp_s\", clientIP_s), clientIP_s)) //combine IP address field into one\n    | where ipv4_is_private(ClientIP_) != true and  ClientIP_ !startswith \"fe80\" and ClientIP_ !startswith \"::\" and ClientIP_ !startswith \"127.\" //exclude private address\n    | project-rename AzureWebApp_TimeGenerated = TimeGenerated\n)   on $left.TI_ipEntity == $right.ClientIP_\n  // Filter out logs that occurred after the expiration of the corresponding indicator\n  | where AzureWebApp_TimeGenerated < ValidUntil\n  // Group the results by IndicatorId and RemoteIP, and keep the log entry with the latest timestamp\n  | summarize AzureWebApp_TimeGenerated = arg_max(AzureWebApp_TimeGenerated, *) by Id, ClientIP_\n  // Select the desired output fields\n  | extend Description = tostring(parse_json(Data).description)\n  | extend ActivityGroupNames = extract(@\"ActivityGroup:(\\S+)\", 1, tostring(parse_json(Data).labels))\n  | project LatestIndicatorTime, Description, requestUri_s, httpMethod_s , Id, ValidUntil, Confidence, AzureWebApp_TimeGenerated, TI_ipEntity, Resource, Category, Type, TrafficLightProtocolLevel, Tags\n  // Rename the timestamp field\n  | extend timestamp = AzureWebApp_TimeGenerated",
                "queryFrequency": "PT1H",
                "queryPeriod": "P14D",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "startTimeUtc": null,
                "tactics": [
                    "InitialAccess"
                ],
                "techniques": [
                    "T1190"
                ],
                "subTechniques": [],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": true,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": {
                    "alertDisplayNameFormat": "[WASOC-Intelligence] Successful inbound traffic to AzureDiagnostics from ip-address monitored by WA SOC known to actively exploit new vulnerabilities",
                    "alertDescriptionFormat": "This query maps any IP indicators of compromise (IOCs) from WASOC Threat Intelligence (TI) known to actively exploit new vulnerabilities, by searching for matches in AzureDiagnostics.\n<br>\nCheck the description of each indicator / Tags, to understand the scope of vulnerabilities exploitation from the ip-addresses.",
                    "alertDynamicProperties": []
                },
                "customDetails": {},
                "entityMappings": [
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "TI_ipEntity"
                            }
                        ]
                    },
                    {
                        "entityType": "URL",
                        "fieldMappings": [
                            {
                                "identifier": "Url",
                                "columnName": "requestUri_s"
                            }
                        ]
                    }
                ],
                "sentinelEntitiesMappings": null,
                "templateVersion": null
            }
        }
    ]
}