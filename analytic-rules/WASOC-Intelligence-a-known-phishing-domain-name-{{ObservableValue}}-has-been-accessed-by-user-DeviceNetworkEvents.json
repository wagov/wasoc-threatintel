{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspace": {
            "type": "String"
        },
        "ruleId": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "metadata": {
            "description": "The unique guid for this Analytics Rule"
            }
        }
    },
    "resources": [
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/', parameters('ruleId'))]",
            "name": "[concat(parameters('workspace'), parameters('ruleId'))]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2023-12-01-preview",
            "properties": {
                "displayName": "[WASOC-Intelligence] a known phishing domain-name {{ObservableValue}} has been accessed by user - DeviceNetworkEvents",
                "description": "The rules detects potentially successful DeviceNetworkEvents connections to domains that match Indicators of Compromise (IOC) from WASOC Threat Intelligence feed.",
                "severity": "High",
                "enabled": true,
                "query": "let dt_lookBack = 1h;\nlet ioc_lookBack = 14d;\nlet DeviceNetworkEvents_ = DeviceNetworkEvents\n    | where TimeGenerated >= ago(dt_lookBack)\n    | where isnotempty(RemoteUrl)\n    | where ActionType !has \"ConnectionFailed\"\n    | extend Domain = tostring(parse_url(tolower(RemoteUrl)).Host)\n    | extend domain_ = iff(isempty(Domain),RemoteUrl, Domain)\n    | project-rename DeviceNetworkEvents_TimeGenerated = TimeGenerated;\nlet TI = ThreatIntelIndicators\n    | where TimeGenerated >= ago(ioc_lookBack)\n    //Use only WASOC-Government-ISAC feed\n    | where SourceSystem == \"WASOC-Government-ISAC\" and Tags contains \"phishing\"\n    | extend IndicatorType = replace(@\"\\[|\\]|\\\"\"\", \"\", tostring(split(ObservableKey, \":\", 0)))\n    | where IndicatorType == \"domain-name\"\n    | extend DomainName = tolower(ObservableValue)\n    | extend IndicatorId = tostring(split(Id, \"--\")[2])\n    | summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by Id, ObservableValue;\nTI\n|join kind=inner DeviceNetworkEvents_ on $left.ObservableValue == $right.domain_\n| where IsActive and (ValidUntil > now() or isempty(ValidUntil))\n| extend Description = tostring(parse_json(Data).description)\n| extend TrafficLightProtocolLevel = tostring(parse_json(AdditionalFields).TLPLevel)\n| where Description !contains_cs \"State: inactive;\" and Description !contains_cs \"State: falsepos;\"\n| project-reorder *, IsActive, Tags, TrafficLightProtocolLevel, DomainName, Type\n| project DeviceNetworkEvents_TimeGenerated, IndicatorId, Url = RemoteUrl, Confidence, Description, Tags, TrafficLightProtocolLevel, ActionType, DeviceId, DeviceName, InitiatingProcessAccountUpn, InitiatingProcessCommandLine, RemoteIP, RemotePort, ObservableValue\n| extend Name = tostring(split(InitiatingProcessAccountUpn, '@', 0)[0]), UPNSuffix = tostring(split(InitiatingProcessAccountUpn, '@', 1)[0])\n| extend timestamp = DeviceNetworkEvents_TimeGenerated, UserPrincipalName = InitiatingProcessAccountUpn",
                "queryFrequency": "PT1H",
                "queryPeriod": "P14D",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "startTimeUtc": null,
                "tactics": [
                    "Execution"
                ],
                "techniques": [
                    "T1204"
                ],
                "subTechniques": [
                    "T1204.001"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": true,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "P1D",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "AlertPerResult"
                },
                "alertDetailsOverride": {
                    "alertDisplayNameFormat": "[WASOC-Intelligence] a known phishing domain-name {{ObservableValue}} has been accessed by user - DeviceNetworkEvents",
                    "alertDescriptionFormat": "The rules detects potentially successful DeviceNetworkEvents connections to domains that match Indicators of Compromise (IOC) from WASOC Threat Intelligence feed.\n<br>\nTLP: {{TrafficLightProtocolLevel}} \n<br>\nIOC Description: {{Description}} \n<br>\nIOC Value: {{ObservableValue}}  ",
                    "alertDynamicProperties": []
                },
                "customDetails": {
                    "Description": "Description"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "InitiatingProcessAccountUpn"
                            },
                            {
                                "identifier": "Name",
                                "columnName": "Name"
                            },
                            {
                                "identifier": "UPNSuffix",
                                "columnName": "UPNSuffix"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "DeviceName"
                            }
                        ]
                    },
                    {
                        "entityType": "URL",
                        "fieldMappings": [
                            {
                                "identifier": "Url",
                                "columnName": "Url"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "RemoteIP"
                            }
                        ]
                    }
                ],
                "sentinelEntitiesMappings": null,
                "templateVersion": null
            }
        }
    ]
}